<?php

namespace App\Console\Commands;

use App\Models\Client;
use App\Contracts\TelegramServiceContract;
use App\Contracts\SMSServiceContract;
use Illuminate\Console\Command;
use Carbon\Carbon;

class SendRevisitReminders extends Command
{
    protected $signature = 'clients:revisit-reminders';
    protected $description = '–û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π –æ –ø–æ–≤—Ç–æ—Ä–Ω–æ–º –≤–∏–∑–∏—Ç–µ';

    public function handle(TelegramServiceContract $telegramService, SMSServiceContract $smsService)
    {
        // –ö–ª–∏–µ–Ω—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ –∑–∞–∫–∞–∑—ã–≤–∞–ª–∏ –±–æ–ª–µ–µ 30 –¥–Ω–µ–π
        $clients = Client::whereHas('orders', function ($query) {
            $query->where('created_at', '<=', Carbon::now()->subDays(30));
        })->whereDoesntHave('orders', function ($query) {
            $query->where('created_at', '>=', Carbon::now()->subDays(30));
        })->get();

        $this->info("–ù–∞–π–¥–µ–Ω–æ {$clients->count()} –∫–ª–∏–µ–Ω—Ç–æ–≤ –¥–ª—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ –ø–æ–≤—Ç–æ—Ä–Ω–æ–º –≤–∏–∑–∏—Ç–µ");

        foreach ($clients as $client) {
            $lastOrder = $client->orders()->latest()->first();
            $daysSinceLastOrder = $lastOrder ? Carbon::now()->diffInDays($lastOrder->created_at) : 30;

            $message = "üîß –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {$client->full_name}!\n\n";
            $message .= "–ü—Ä–æ—à–ª–æ —É–∂–µ {$daysSinceLastOrder} –¥–Ω–µ–π —Å –í–∞—à–µ–≥–æ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –≤–∏–∑–∏—Ç–∞.\n";
            $message .= "–í–æ–∑–º–æ–∂–Ω–æ, –í–∞—à–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã —Å–Ω–æ–≤–∞ –Ω—É–∂–¥–∞—é—Ç—Å—è –≤ –∑–∞—Ç–æ—á–∫–µ –∏–ª–∏ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–∏?\n\n";
            $message .= "üí° –°–ø–µ—Ü–∏–∞–ª—å–Ω–æ –¥–ª—è –í–∞—Å - —Å–∫–∏–¥–∫–∞ 15% –Ω–∞ –≤—Å–µ —É—Å–ª—É–≥–∏ –ø—Ä–∏ –∑–∞–∫–∞–∑–µ –≤ —Ç–µ—á–µ–Ω–∏–µ –Ω–µ–¥–µ–ª–∏!\n\n";
            $message .= "–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –º–æ–∂–Ω–æ –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É –∏–ª–∏ –≤ Telegram.\n";
            $message .= "–° —É–≤–∞–∂–µ–Ω–∏–µ–º, –∫–æ–º–∞–Ω–¥–∞ –ó–∞—Ç–æ—á–∫–∞";

            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ Telegram
            if ($client->telegram) {
                $telegramService->sendMessage($client->telegram, $message);
                $this->info("–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram –∫–ª–∏–µ–Ω—Ç—É {$client->full_name}");
            }

            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º SMS
            if ($client->phone) {
                $smsMessage = "–ü—Ä–æ—à–ª–æ {$daysSinceLastOrder} –¥–Ω–µ–π —Å –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –≤–∏–∑–∏—Ç–∞. –°–∫–∏–¥–∫–∞ 15% –Ω–µ–¥–µ–ª—é. –ó–∞—Ç–æ—á–∫–∞";
                $smsService->sendMessage($client->phone, $smsMessage);
                $this->info("–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ SMS –∫–ª–∏–µ–Ω—Ç—É {$client->full_name}");
            }

            // –°–æ—Ö—Ä–∞–Ω—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
            $client->notifications()->create([
                'type' => 'revisit_reminder',
                'message_text' => $message,
                'sent_at' => now(),
            ]);
        }

        $this->info('–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ –ø–æ–≤—Ç–æ—Ä–Ω–æ–º –≤–∏–∑–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã!');
    }
}
